version: "3.8"
services:
    userService:
        container_name: userService
        build:
            context: userservice
            dockerfile: Dockerfile
        image: userservice
        working_dir: /var/www/html
        entrypoint: /bin/sh -c "composer install &&
            php artisan key:generate &&
            php artisan optimize &&
            php-fpm"
        volumes:
            - ./userservice:/var/www/html
        networks:
            - ltweb-network
        depends_on:
            - databaseService

    nginx:
        container_name: nginx
        image: nginx:latest
        ports:
            - "8881:80"
        volumes:
            - ./userservice:/var/www/html
            - ./userservice/nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - ltweb-network
        depends_on:
            - userService

    databaseService:
        container_name: databaseService
        image: postgres:latest
        env_file:
            - userservice/.env
        volumes:
            - ltweb-database:/data/postgres
            - ltweb-database:/var/lib/postgresql/data
            - ./databaseservice:/docker-entrypoint-initdb.d
        ports:
            - "5432:5432"
        networks:
            - ltweb-network

    apiGatewayService:
        container_name: apiGatewayService
        build:
            context: ./apigatewayservice
            dockerfile: Dockerfile
        ports:
            - "443:8443"
        image: apigateservice
        networks:
            - ltweb-network

    postService:
        container_name: postService
        build:
            context: ./postservice
            dockerfile: Dockerfile
        volumes:
            -   ./postservice:/app
        env_file:
            - userservice/.env
        ports:
            - "8882:80"
        image: postservice
        networks:
            - ltweb-network
        depends_on:
            - databaseService
            - userService

    bookmarkService:
        container_name: bookmarkService
        build:
            context: ./bookmarkservice
            dockerfile: Dockerfile
        volumes:
            -   ./bookmarkservice:/app
        env_file:
            - userservice/.env
        ports:
            - "8883:80"
        image: bookmarkservice
        networks:
            - ltweb-network
        depends_on:
            - databaseService
            - userService
    commentService:
        container_name: commentService
        build:
            context: ./commentservice
            dockerfile: Dockerfile
        volumes:
            -   ./commentservice:/app
        env_file:
            - userservice/.env
        ports:
            - "8884:80"
        image: commentservice
        networks:
            - ltweb-network
        depends_on:
            - databaseService
            - userService
    notificationService:
        container_name: notificationService
        build:
            context: ./notificationservice
            dockerfile: Dockerfile
        volumes:
            -   ./notificationservice:/app
        env_file:
            - userservice/.env
        ports:
            - "8885:80"
        image: notificationservice
        networks:
            - ltweb-network
        depends_on:
            - databaseService
            - userService
#    frontendService:
#        container_name: frontendService
#        build:
#            context: ./frontendservice
#            dockerfile: Dockerfile
#        volumes:
#            -   ./frontendservice:/app
#        ports:
#            - "9999:3000"
#        image: frontendservice
networks:
    ltweb-network:
        driver: bridge

volumes:
    ltweb-database:
        driver: local
